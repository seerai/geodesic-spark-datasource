name: PR Check

on:
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'temurin'

    - name: Setup SBT
      uses: sbt/setup-sbt@v1

    - name: Cache SBT dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.ivy2/cache
          ~/.sbt
          ~/.coursier/cache
        key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt', '**/project/build.properties', '**/project/plugins.sbt') }}
        restore-keys: |
          ${{ runner.os }}-sbt-

    - name: Preview semantic version
      id: version
      uses: paulhatch/semantic-version@v5.4.0
      with:
        tag_prefix: "v"
        major_pattern: "(MAJOR)"
        minor_pattern: "(MINOR)"
        version_format: "${major}.${minor}.${patch}"
        search_commit_body: true
        user_format_type: "csv"
        bump_each_commit: false

    - name: Show version preview
      run: |
        echo "🔍 Version preview: ${{ steps.version.outputs.version }}"
        echo "📝 Version changed: ${{ steps.version.outputs.changed }}"
        if [ "${{ steps.version.outputs.changed }}" == "true" ]; then
          echo "✅ This PR will create a new release: v${{ steps.version.outputs.version }}"
        else
          echo "ℹ️ This PR will not trigger a new release"
        fi

    - name: Run tests
      run: sbt test

    - name: Compile
      run: sbt compile

    - name: Test compile
      run: sbt Test/compile

    - name: Check for common issues
      run: |
        echo "🔍 Checking for common issues..."
        
        # Check for TODO/FIXME comments
        if grep -r "TODO\|FIXME" src/ --include="*.scala" --exclude-dir=target; then
          echo "⚠️ Found TODO/FIXME comments - consider addressing them"
        else
          echo "✅ No TODO/FIXME comments found"
        fi
        
        # Check for println statements (should use proper logging)
        if grep -r "println" src/main/ --include="*.scala" --exclude-dir=target; then
          echo "⚠️ Found println statements in main code - consider using proper logging"
        else
          echo "✅ No println statements found in main code"
        fi

    - name: Generate test report
      if: always()
      run: |
        echo "## Test Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        if [ -f target/test-reports/TEST-*.xml ]; then
          echo "✅ Tests completed successfully" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ Test execution failed" >> $GITHUB_STEP_SUMMARY
        fi
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Next version:** ${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY

    - name: Comment PR
      if: github.event_name == 'pull_request' && steps.version.outputs.changed == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `🚀 **Release Preview**
            
            This PR will trigger a new release when merged:
            - **New Version:** v${{ steps.version.outputs.version }}
            - **Current Version:** ${{ steps.version.outputs.current_version }}
            
            Make sure all changes are ready for release!`
          })
